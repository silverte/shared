apiVersion: v1
kind: Pod
metadata:
  annotations:
    prometheus.io/port: '8080'
    prometheus.io/scrape: 'true'
  creationTimestamp: '2025-01-03T09:58:21Z'
  generateName: aws-load-balancer-controller-d7854b9c4-
  labels:
    app.kubernetes.io/instance: aws-load-balancer-controller
    app.kubernetes.io/name: aws-load-balancer-controller
    pod-template-hash: d7854b9c4
  name: aws-load-balancer-controller-d7854b9c4-czrsp
  namespace: kube-system
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: aws-load-balancer-controller-d7854b9c4
      uid: 24bf4e6b-cf6d-4ae9-9217-1b835c90e6b6
  resourceVersion: '4457391'
  uid: 50491dc2-b17d-4621-9029-408d2250bc3f
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - aws-load-balancer-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
  containers:
    - args:
        - --cluster-name=eks-esp-shared
        - --ingress-class=alb
        - --aws-region=ap-northeast-2
        - --aws-vpc-id=vpc-0e831ef06c2c87bdd
      env:
        - name: AWS_STS_REGIONAL_ENDPOINTS
          value: regional
        - name: AWS_DEFAULT_REGION
          value: ap-northeast-2
        - name: AWS_REGION
          value: ap-northeast-2
        - name: AWS_ROLE_ARN
          value: arn:aws:iam::026090541481:role/role-esp-shared-albc
        - name: AWS_WEB_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: public.ecr.aws/eks/aws-load-balancer-controller:v2.6.2
      imagePullPolicy: IfNotPresen
      livenessProbe:
        failureThreshold: 2
        httpGet:
          path: /healthz
          port: 61779
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: aws-load-balancer-controller
      ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8080
          name: metrics-server
          protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-m55bh
          readOnly: true
        - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
          name: aws-iam-token
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: ip-10-3-212-39.ap-northeast-2.compute.internal
  preemptionPolicy: PreemptLowerPriority
  priority: 2000000000
  priorityClassName: system-cluster-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 65534
  serviceAccount: aws-load-balancer-controller
  serviceAccountName: aws-load-balancer-controller
  terminationGracePeriodSeconds: 10
  tolerations:
    - effect: NoSchedule
      key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: aws-iam-token
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              audience: sts.amazonaws.com
              expirationSeconds: 86400
              path: token
    - name: cert
      secret:
        defaultMode: 420
        secretName: aws-load-balancer-tls
    - name: kube-api-access-m55bh
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: '2025-01-03T09:58:22Z'
      status: 'True'
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: '2025-01-03T09:58:21Z'
      status: 'True'
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: '2025-01-03T09:58:22Z'
      status: 'True'
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: '2025-01-03T09:58:22Z'
      status: 'True'
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: '2025-01-03T09:58:21Z'
      status: 'True'
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://067072c1a312d9ba0637f33e984aad79e2ff4101f4dadc9f0691c744c9f46a90
      image: public.ecr.aws/eks/aws-load-balancer-controller:v2.6.2
      imageID: public.ecr.aws/eks/aws-load-balancer-controller@sha256:afc96bdad819bfac184a6e9a90096b68583cf5977e66fa985143bde37e847a50
      lastState: {}
      name: aws-load-balancer-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: '2025-01-03T09:58:22Z'
      volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
          recursiveReadOnly: Disabled
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-m55bh
          readOnly: true
          recursiveReadOnly: Disabled
        - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
          name: aws-iam-token
          readOnly: true
          recursiveReadOnly: Disabled
  hostIP: 10.3.212.39
  hostIPs:
    - ip: 10.3.212.39
  phase: Running
  podIP: 10.3.212.83
  podIPs:
    - ip: 10.3.212.83
  qosClass: BestEffort
  startTime: '2025-01-03T09:58:21Z'
